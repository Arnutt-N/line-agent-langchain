#!/usr/bin/env python3
"""
Add Pure Text Message Templates
‡πÄ‡∏û‡∏¥‡πà‡∏° Templates ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ (‡πÑ‡∏°‡πà‡∏°‡∏µ Quick Reply)
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from backend.app.database import SessionLocal
from backend.app.template_crud import create_message_template, get_message_categories
from backend.app.schemas import MessageTemplateCreate

def add_pure_text_templates():
    """‡πÄ‡∏û‡∏¥‡πà‡∏° Pure Text Templates"""
    db = SessionLocal()
    
    # Get categories
    categories = get_message_categories(db)
    category_map = {cat.name: cat.id for cat in categories}
    
    pure_text_templates = [
        # Simple Greetings
        {
            "name": "Simple Hello",
            "description": "‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢",
            "message_type": "text",
            "category_id": category_map.get("Greeting"),
            "content": {
                "text": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! üòä"
            },
            "priority": 7,
            "tags": "hello, simple, greeting"
        },
        
        # Thank You Messages
        {
            "name": "Thank You",
            "description": "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡πâ‡∏ô ‡πÜ",
            "message_type": "text",
            "category_id": category_map.get("Support"),
            "content": {
                "text": "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ö! üôè"
            },
            "priority": 6,
            "tags": "thanks, gratitude, appreciation"
        },
        
        # Confirmation Messages
        {
            "name": "Received Confirmation",
            "description": "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°",
            "message_type": "text",
            "category_id": category_map.get("Support"),
            "content": {
                "text": "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö..."
            },
            "priority": 8,
            "tags": "confirmation, received, processing"
        },
        
        # Apology Messages
        {
            "name": "Simple Apology",
            "description": "‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢",
            "message_type": "text",
            "category_id": category_map.get("Support"),
            "content": {
                "text": "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡∏£‡∏±‡∏ö üôè"
            },
            "priority": 7,
            "tags": "sorry, apology, inconvenience"
        },
        
        # Waiting Messages
        {
            "name": "Please Wait",
            "description": "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà",
            "message_type": "text",
            "category_id": category_map.get("Information"),
            "content": {
                "text": "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ... ‚è≥"
            },
            "priority": 8,
            "tags": "wait, processing, loading"
        },
        
        # Completion Messages
        {
            "name": "Task Complete",
            "description": "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô",
            "message_type": "text",
            "category_id": category_map.get("Information"),
            "content": {
                "text": "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö! ‚úÖ"
            },
            "priority": 6,
            "tags": "complete, done, finished"
        },
        
        # Error Messages
        {
            "name": "Simple Error",
            "description": "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡πâ‡∏ô",
            "message_type": "text",
            "category_id": category_map.get("Emergency"),
            "content": {
                "text": "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ñ‡∏£‡∏±‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‚ùå"
            },
            "priority": 9,
            "tags": "error, problem, retry"
        },
        
        # Good Bye Messages
        {
            "name": "Simple Goodbye",
            "description": "‡∏Å‡∏≤‡∏£‡∏≠‡∏≥‡∏•‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏á‡πà‡∏≤‡∏¢",
            "message_type": "text",
            "category_id": category_map.get("Greeting"),
            "content": {
                "text": "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏´‡∏ß‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏û‡∏π‡∏î‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡∏Å üëã"
            },
            "priority": 5,
            "tags": "goodbye, farewell, thanks"
        }
    ]
    
    print("üìù Adding Pure Text Templates...")
    
    for template_data in pure_text_templates:
        try:
            template = MessageTemplateCreate(**template_data)
            created = create_message_template(db, template)
            print(f"‚úÖ Created pure text template: {template_data['name']}")
        except Exception as e:
            print(f"‚ùå Failed to create template {template_data['name']}: {e}")
    
    db.close()
    print("‚úÖ Pure text templates added!")

if __name__ == "__main__":
    print("üì® Adding Pure Text Message Templates")
    print("=" * 50)
    add_pure_text_templates()
