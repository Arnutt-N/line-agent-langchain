#!/usr/bin/env python3
"""
Sample Templates Data
‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Message Templates
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from backend.app.database import SessionLocal
from backend.app.template_crud import create_message_template, get_message_categories
from backend.app.schemas import MessageTemplateCreate

def add_sample_templates():
    """‡πÄ‡∏û‡∏¥‡πà‡∏° sample templates"""
    db = SessionLocal()
    
    # Get categories
    categories = get_message_categories(db)
    category_map = {cat.name: cat.id for cat in categories}
    
    sample_templates = [
        # Text Messages
        {
            "name": "Welcome Message",
            "description": "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà",
            "message_type": "text",
            "category_id": category_map.get("Greeting"),
            "content": {
                "text": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ üéâ\n\n‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå 'help' ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
                "quick_reply": {
                    "items": [
                        {"action": {"type": "message", "label": "Help", "text": "help"}},
                        {"action": {"type": "message", "label": "Services", "text": "services"}},
                        {"action": {"type": "message", "label": "Contact", "text": "contact"}}
                    ]
                }
            },
            "priority": 10,
            "tags": "welcome, greeting, new user"
        },
        
        # Sticker Messages
        {
            "name": "Happy Sticker",
            "description": "‡∏™‡∏ï‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ",
            "message_type": "sticker",
            "category_id": category_map.get("Entertainment"),
            "content": {
                "package_id": "11537",
                "sticker_id": "52002734"
            },
            "priority": 5,
            "tags": "happy, celebration, emotion"
        },
        
        # Information Message
        {
            "name": "Business Hours",
            "description": "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£",
            "message_type": "text",
            "category_id": category_map.get("Information"),
            "content": {
                "text": "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤\n\nüìÖ ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏®‡∏∏‡∏Å‡∏£‡πå: 09:00 - 18:00\nüìÖ ‡πÄ‡∏™‡∏≤‡∏£‡πå - ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå: 10:00 - 16:00\n\nüìû ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á"
            },
            "priority": 8,
            "tags": "hours, time, information, contact"
        },
        
        # Support Message
        {
            "name": "How Can I Help",
            "description": "‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
            "message_type": "text",
            "category_id": category_map.get("Support"),
            "content": {
                "text": "‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö? ü§î\n\n‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö",
                "quick_reply": {
                    "items": [
                        {"action": {"type": "message", "label": "üìã Services", "text": "show services"}},
                        {"action": {"type": "message", "label": "üí∞ Pricing", "text": "show pricing"}},
                        {"action": {"type": "message", "label": "üìû Contact", "text": "contact info"}},
                        {"action": {"type": "message", "label": "‚ùì FAQ", "text": "faq"}}
                    ]
                }
            },
            "priority": 9,
            "tags": "help, support, assistance, menu"
        }
    ]
    
    print("üìù Adding sample templates...")
    
    for template_data in sample_templates:
        try:
            template = MessageTemplateCreate(**template_data)
            created = create_message_template(db, template)
            print(f"‚úÖ Created template: {template_data['name']}")
        except Exception as e:
            print(f"‚ùå Failed to create template {template_data['name']}: {e}")
    
    db.close()
    print("‚úÖ Sample templates added!")

if __name__ == "__main__":
    print("üì® Adding Sample Message Templates")
    print("=" * 50)
    add_sample_templates()
